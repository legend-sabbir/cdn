!function(e,s){if("object"==typeof exports&&"object"==typeof module)module.exports=s();else if("function"==typeof define&&define.amd)define([],s);else{var t=s();for(var a in t)("object"==typeof exports?exports:e)[a]=t[a]}}(self,(()=>(()=>{"use strict";var e={305:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.MessageType=s.GlobalOptionsMessage=s.DisposeMessage=s.ChangeOptionsMessage=s.ChangeModeMessage=s.DeltasMessage=s.ChangeMessage=s.ValidateMessage=s.HoverMessage=s.ResolveCompletionMessage=s.CompleteMessage=s.FormatMessage=s.InitMessage=s.BaseMessage=void 0;class t{sessionId;constructor(e){this.sessionId=e}}var a;s.BaseMessage=t,s.InitMessage=class extends t{type=a.init;mode;options;value;version;constructor(e,s,t,a,o){super(e),this.version=t,this.options=o,this.mode=a,this.value=s}},s.FormatMessage=class extends t{type=a.format;value;format;constructor(e,s,t){super(e),this.value=s,this.format=t}},s.CompleteMessage=class extends t{type=a.complete;value;constructor(e,s){super(e),this.value=s}},s.ResolveCompletionMessage=class extends t{type=a.resolveCompletion;value;constructor(e,s){super(e),this.value=s}},s.HoverMessage=class extends t{type=a.hover;value;constructor(e,s){super(e),this.value=s}},s.ValidateMessage=class extends t{type=a.validate;constructor(e){super(e)}},s.ChangeMessage=class extends t{type=a.change;value;version;constructor(e,s,t){super(e),this.value=s,this.version=t}},s.DeltasMessage=class extends t{type=a.applyDelta;value;version;constructor(e,s,t){super(e),this.value=s,this.version=t}},s.ChangeModeMessage=class extends t{type=a.changeMode;mode;value;constructor(e,s,t){super(e),this.value=s,this.mode=t}},s.ChangeOptionsMessage=class extends t{type=a.changeOptions;options;merge;constructor(e,s,t=!1){super(e),this.options=s,this.merge=t}},s.DisposeMessage=class extends t{type=a.dispose;constructor(e){super(e)}},s.GlobalOptionsMessage=class{type=a.globalOptions;serviceName;options;merge;constructor(e,s,t){this.serviceName=e,this.options=s,this.merge=t}},function(e){e[e.init=0]="init",e[e.format=1]="format",e[e.complete=2]="complete",e[e.resolveCompletion=3]="resolveCompletion",e[e.change=4]="change",e[e.hover=5]="hover",e[e.validate=6]="validate",e[e.applyDelta=7]="applyDelta",e[e.changeMode=8]="changeMode",e[e.changeOptions=9]="changeOptions",e[e.dispose=10]="dispose",e[e.globalOptions=11]="globalOptions"}(a=s.MessageType||(s.MessageType={}))},6508:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.mergeObjects=void 0,s.mergeObjects=function e(s,t){if(!s)return t;if(!t)return s;const a={};for(const o of[...Object.keys(s),...Object.keys(t)])s[o]&&t[o]?Array.isArray(s[o])?a[o]=s[o].concat(t[o]):a[o]=e(s[o],t[o]):a[o]=s[o]??t[o];return a}}},s={};function t(a){var o=s[a];if(void 0!==o)return o.exports;var i=s[a]={exports:{}};return e[a](i,i.exports,t),i.exports}var a={};return(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.ServiceManager=void 0;const s=t(6508),o=t(305);class i{$services={};$sessionIDToMode={};constructor(e){let s=(s,t)=>{if(t??=this.getServiceInstance(s.uri),!t)return;let a={type:o.MessageType.validate},i=Object.keys(t.documents);for(let s of i)t.doValidation({uri:s}).then((t=>{a.sessionId=s,a.value=t,e.postMessage(a)}))};e.addEventListener("message",(async t=>{let a=t.data,i=a.sessionId,n=a.version,r={type:a.type,sessionId:i},c=this.getServiceInstance(i),l={uri:i,version:n};switch(a.type){case o.MessageType.format:r.value=c?.format(l,a.value,a.format);break;case o.MessageType.complete:r.value=await(c?.doComplete(l,a.value));break;case o.MessageType.resolveCompletion:r.value=await(c?.doResolve(a.value));break;case o.MessageType.change:c?.setValue(l,a.value),s(l,c);break;case o.MessageType.applyDelta:c?.applyDeltas(l,a.value),s(l,c);break;case o.MessageType.hover:r.value=await(c?.doHover(l,a.value));break;case o.MessageType.validate:r.value=await(c?.doValidation(l));break;case o.MessageType.init:await this.addDocument(l,a.value,a.mode,a.options),s(l);break;case o.MessageType.changeMode:await this.changeDocumentMode(l,a.value,a.mode,a.options),s(l,c);break;case o.MessageType.changeOptions:c?.setOptions(i,a.options),s(l,c);break;case o.MessageType.dispose:this.removeDocument(l);break;case o.MessageType.globalOptions:this.setGlobalOptions(a.serviceName,a.options,a.merge)}e.postMessage(r)}))}static async $initServiceInstance(e){let s=await e.module();e.serviceInstance=new s[e.className](e.modes),e.options&&e.serviceInstance.setGlobalOptions(e.options)}async $getServiceInstanceByMode(e){let s=this.findServiceByMode(e);if(s)return s.serviceInstance||await i.$initServiceInstance(s),s.serviceInstance}setGlobalOptions(e,t,a=!1){let o=this.$services[e];o&&(o.options=a?(0,s.mergeObjects)(t,o.options):t,o.serviceInstance&&o.serviceInstance.setGlobalOptions(o.options))}async addDocument(e,s,t,a){if(!t||!/^ace\/mode\//.test(t))return;t=t.replace("ace/mode/","");let o=await this.$getServiceInstanceByMode(t);if(!o)return;let i={uri:e.uri,version:e.version,languageId:t,text:s};o.addDocument(i),this.$sessionIDToMode[e.uri]=t}async changeDocumentMode(e,s,t,a){this.removeDocument(e),await this.addDocument(e,s,t,a)}removeDocument(e){let s=this.getServiceInstance(e.uri);s&&(s.removeDocument(e),delete this.$sessionIDToMode[e.uri])}getServiceInstance(e){let s=this.$sessionIDToMode[e],t=this.findServiceByMode(s);if(s&&t?.serviceInstance)return t.serviceInstance}findServiceByMode(e){return Object.values(this.$services).find((s=>{if(s.modes.split("|").includes(e))return s}))}registerService(e,s){this.$services[e]=s}}e.ServiceManager=i})(),a})()));
//# sourceMappingURL=service-manager.js.map